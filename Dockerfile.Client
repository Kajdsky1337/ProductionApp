# 1) etap build: SDK + workload do Blazor WASM
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# zainstaluj wasm-tools
RUN dotnet workload install wasm-tools

# 2) skopiuj plik rozwi¹zania i wszystkie .csproj potrzebne do referencji
COPY *.sln ./
COPY ProductionApp.Client/*.csproj ProductionApp.Client/
COPY ProductionApp.Shared/*.csproj ProductionApp.Shared/
# (jeœli masz inne projekty referencjonowane, kopiuj ich .csproj tak¿e)

# 3) przywróæ ca³e rozwi¹zanie
RUN dotnet restore

# 4) skopiuj resztê kodu (wszystkie .razor, .cs, wwwroot itd.)
COPY . .

# 5) ustaw katalog do publikacji klienta i opublikuj
WORKDIR /src/ProductionApp.Client
RUN dotnet publish -c Release -o /app/publish

# --- etap runtime na nginx ---
FROM nginx:alpine AS runtime
COPY --from=build /app/publish/wwwroot/. /usr/share/nginx/html/

RUN cat > /etc/nginx/conf.d/default.conf << 'EOF'
server {
    listen       80;
    location / {
        root   /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }
}
EOF

EXPOSE 80
ENTRYPOINT ["nginx", "-g", "daemon off;"]
